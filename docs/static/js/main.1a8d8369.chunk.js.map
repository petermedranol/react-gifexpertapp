{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","cateogry","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACE,0BAAMC,SAXc,SAACC,GAEnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAuBO,OACrCN,EAAc,OAMhB,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECAT,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAoBrC,OAdAC,qBAAU,WACNxB,EAASC,GAAUwB,MAAK,SAAAC,GACpBC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAKR,CAACpB,IAEIqB,EDlBwBM,CAAa3B,GAAhCa,EAFqB,EAE1BN,KAAaa,EAFa,EAEbA,QAEpB,OACI,oCACI,4BAAKpB,GACL,yBAAKgB,UAAU,aACTI,GAAW,sCACXP,EAAOJ,KAAI,SAACC,GACV,OAAO,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,GAAID,IAAKA,GAAUA,UESrDmB,EAnBM,WAAK,IAAD,EACe3C,mBAAS,CAAC,cADzB,mBACd4C,EADc,KACF7C,EADE,KAGrB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ6C,EAAWrB,KAAI,SAACsB,GACZ,OAAO,kBAAC,EAAD,CAASH,IAAKG,EAAU/B,SAAU+B,UCVjEC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1a8d8369.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories})=>{\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const  handleSubmit = (e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories((cats)=>[inputValue,...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n          <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={ handleInputChange }\r\n          />\r\n      </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=dqR8FnV5bjAY5AmSMui8nhJpCunzU2IU`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                { loading && <p>Loading</p> }\r\n                { images.map((img)=>{\r\n                    return <GifGridItem key={img.id} img={img} { ...img}/>\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs( category).then(imgs=>{\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            },3000);\r\n\r\n\r\n\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React,{ useState } from 'react';\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = ()=>{\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ul>\r\n                {\r\n                    categories.map((cateogry)=>{\r\n                        return <GifGrid key={cateogry} category={cateogry}/>\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}